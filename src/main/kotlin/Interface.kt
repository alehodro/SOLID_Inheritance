/*
Интерфейс - это абстракция очень похожая на абстрактный класс с той лишь разницей, что интерфейс не может хранить
состояния(значения свойств), в интерфейсе могут быть объявлены свойства и функции, но по факту все они абстракные по
умолчанию и должны быть обязательно переопределены в имплементирующем интерфейс классе.
Важной особенностью интерфейса является то, что классы могут имплементировать (по сути отнаследоваться от) множество
интерфейсов.
Назначение интерфейсов это группировка и объявление некоторого множества функций и их контрактов, которые любой
имплементирующий интерфейс класс может реализовывать по своему, также интерфейс служит абстаркцией через которую
устанавливаются зависимости классов между собой (т.е. класс А который зависит от класса B, что не хорошо, может
зависеть от интерфейса C, который имплементирует класс B, что уже хорошо)
 */

interface PowerController{
    fun powerOn()
    fun powerOff()
}

interface VolumeController{
    fun volumeUp()
    fun volumeDown()
}

class TV:PowerController,VolumeController{
    override fun powerOn() {
        println("TV switched on")
    }

    override fun powerOff() {
        println("TV switched off")
    }

    override fun volumeUp() {
        println("Volume increased")
    }

    override fun volumeDown() {
        println("Volume decreased")
    }

}
